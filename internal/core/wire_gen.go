// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package core

import (
	"haolinju.xianhaohan.com/internal/app/controllers"
	"haolinju.xianhaohan.com/internal/app/models"
	"haolinju.xianhaohan.com/internal/app/services"
)

// Injectors from wire.go:

//go:generate
func InitApp() (*App, func(), error) {
	appConfig, cleanup, err := Init()
	if err != nil {
		return nil, nil, err
	}
	model, cleanup2, err := models.New(appConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	service, err := services.New(model)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	engine, err := controllers.New(service)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	app, cleanup3, err := NewApp(service, engine)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return app, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}

//go:generate
func InitJob() (*Job, func(), error) {
	appConfig, cleanup, err := Init()
	if err != nil {
		return nil, nil, err
	}
	model, cleanup2, err := models.New(appConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	service, err := services.New(model)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	job, cleanup3, err := NewJob(service)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return job, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
